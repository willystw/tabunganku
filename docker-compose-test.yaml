version: "3"
services:
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.8
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=example@example.com
      - PGADMIN_DEFAULT_PASSWORD=example
    networks:
      be-network:
        ipv4_address: 172.20.10.1
  postgres:
    container_name: db_postgres
    image: tabunganku-postgres
    restart: always
    build:
      dockerfile: docker/Dockerfile_Postgres
    environment:
      - POSTGRES_USER=tabunganku
      - POSTGRES_PASSWORD=tabungankudb
      - POSTGRES_DB=tabungan
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      be-network:
        ipv4_address: 172.20.10.2
  keycloak:
    container_name: keycloak-server
    restart: always
    build:
      dockerfile: docker/Dockerfile_Keycloak
      context: .
    image: tabungan-keycloak
    env_file:
      - .env
    ports:
      - 8180:8180
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command:
      - start-dev
      - --http-port=8180
    networks:
      be-network:
        ipv4_address: 172.20.10.5
  backend:
    container_name: tabunganku-backend
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: tabunganku-backend
    ports:
      - 8080:8080
    env_file:
      - .env
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    networks:
      be-network:
        ipv4_address: 172.20.10.3
volumes:
  postgres_data:
networks:
  be-network:
    driver: bridge
    name: tabunganku-network
    ipam:
      config:
        - subnet: 172.20.0.0/16
